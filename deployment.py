import caffe
import cv2
import sys
import matplotlib.pyplot as plt


# function that giving the result of analyze of picture 
def deploy (img_path): # importing image path

    # initializing the caffe mode
    caffe.set_mode_gpu()
    
    # uploading files generated by Nvidia DIGITS
    MODEL_JOB_DIR = '/dli/data/digits/20190209-212443-4712'
    ARCHITECTURE  = MODEL_JOB_DIR + '/' + 'deploy.prototxt'
    WEIGHTS       = MODEL_JOB_DIR + '/' + 'snapshot_iter_540.caffemodel'
    DATA_JOB_DIR = '/dli/data/digits/20190209-211204-1317'
    
    # initializing the Caffe model using the model trained in DIGITS
    net = caffe.Classifier(ARCHITECTURE, WEIGHTS,
                           channel_swap = (2,1,0),
                           raw_scale    = 255,
                           image_dims   = (256, 256))
                       
    # Tools for creating an output that are needed for network' input
    input_image = caffe.io.load_image (img_path)                # imported image 
    input_image = cv2.resize(input_image, (256,256))
    mean_image  = caffe.io.load_image (DATA_JOB_DIR + '/mean.jpg') # file made by DIGITS
    ready_image = input_image - mean_image                      # difference

    # making prediction with use of net.predict function
    prediction = net.predict ([ready_image])

    # creating an output that can demostrate the input data and the program results
    # it's also good, in situation when they prediction is wrong- it's easy to find
    print ("Input Image:")
    plt.imshow (sys.argv[1])
    plt.show ()
    Image.open (input_image).show()
    print (prediction)
    
    # the results of process with customer's friendly output
    if (prediction.argmax()==0):
        print ("It's whale.")
    else:
        print ("It's not whale.")

# main function       
if __name__ == '__main__':
    print (deploy(sys.argv[1]))